sudo: required

env:
- CHANGE_MINIKUBE_NONE_USER=true

language: java
jdk: oraclejdk8
install: true

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

before_script:
# Download kubectl, which is a requirement for using minikube.
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
# Download minikube.
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
- sudo minikube start --vm-driver=none --kubernetes-version=v1.9.0
# Fix the kubectl context, as it's often stale.
- minikube update-context
# Wait for Kubernetes to be up and ready.
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done

jobs:
  include:
    - stage: all tests
      script: kubectl cluster-info && ./gradlew -s -Dorg.gradle.daemon=false clean build functionalTest publishToMavenLocal
      after_script: bash <(curl -s https://codecov.io/bash)
    - stage: release
      script: skip
      deploy:
        provider: script
        script: ./gradlew -s clean productionRelease -PbintrayUsername=$BINTRAY_USER -PbintrayKey=$BINTRAY_KEY -PreleaseUsername=bmuschko -PreleasePassword=$GH_TOKEN -PreleaseRepository=gradle-plugins
        on:
          tags: true

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
